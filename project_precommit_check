#!/usr/bin/env python3
# ===--- project_precommit_check ------------------------------------------===
#
#  This source file is part of the Swift.org open source project
#
#  Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
#  Licensed under Apache License v2.0 with Runtime Library Exception
#
#  See https://swift.org/LICENSE.txt for license information
#  See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
#
# ===----------------------------------------------------------------------===

import sys
import os
import argparse
import platform
import json

import common

script_path = os.path.dirname(os.path.realpath(__file__))
project_list = os.path.join(script_path, 'projects.json')
runner_path = os.path.join(script_path, 'runner.py')
supported_configs = {
    'Darwin': {
        '4.0': {
            'version': 'Apple Swift version 4.0 '
                       '(swiftlang-900.0.65.2 clang-900.0.37)\n'
                       'Target: x86_64-apple-macosx10.9\n',
            'description': 'Xcode 9.0.1 (contains Swift 4.0)',
            'branch': 'release/4.0'
        },
        '4.0.3': {
            'version': 'Apple Swift version 4.0.3 '
                       '(swiftlang-900.0.74.1 clang-900.0.39.2)\n'
                       'Target: x86_64-apple-macosx10.9\n',
            'description': 'Xcode 9.2 (contains Swift 4.0.3)',
            'branch': 'release/4.0'
        },
        '4.1': {
            'version': 'Apple Swift version 4.1 '
                       '(swiftlang-902.0.48 clang-902.0.37.1)\n'
                       'Target: x86_64-apple-darwin17.7.0\n',
            'description': 'Xcode 9.3 (contains Swift 4.1)',
            'branch': 'release/4.1'
        },
        '4.2': {
            'version': 'Apple Swift version 4.2 '
                       '(swiftlang-1000.11.37.1 clang-1000.11.45.1)\n'
                       'Target: x86_64-apple-darwin17.7.0\n',
            'description': 'Xcode 10.0 (contains Swift 4.2)',
            'branch': 'release/4.2'
        },
        '4.2.1': {
            'version': 'Apple Swift version 4.2.1 '
                       '(swiftlang-1000.11.42 clang-1000.11.45.1)\n'
                       'Target: x86_64-apple-darwin17.7.0\n',
            'description': 'Xcode 10.1 (contains Swift 4.2.1)',
            'branch': 'release/4.2'
        },
        '5.0': {
            'version': 'Apple Swift version 5.0 '
                       '(swiftlang-1001.0.69.5 clang-1001.0.46.3)\n'
                       'Target: x86_64-apple-darwin18.2.0\n',
            'description': 'Xcode 10.2 (contains Swift 5.0)',
            'branch': 'release/5.0'
        },
        '5.1': {
            'version': 'Apple Swift version 5.1 '
                       '(swiftlang-1100.0.270.6 clang-1100.0.32.1)\n'
                       'Target: x86_64-apple-darwin18.2.0\n',
            'description': 'Xcode 11 Beta 6 (contains Swift 5.1)',
            'branch': 'release/5.1'
        },
        '5.2': {
            'version': 'Apple Swift version 5.2.4 '
                       '(swiftlang-1103.0.32.9 clang-1103.0.32.53)\n'
                       'Target: x86_64-apple-darwin18.2.0\n',
            'description': 'Xcode 11.5 (contains Swift 5.2.4)',
            'branch': 'release/5.2'
        },
        '5.3': {
            'version': 'Apple Swift version 5.3.2 '
                       '(swiftlang-1200.0.45 clang-1200.0.32.28)\n'
                       'Target: x86_64-apple-darwin20.3.0\n',
            'description': 'Xcode 12.4 (contains Swift 5.3.2)',
            'branch': 'release/5.3'
        },
        '5.7': {
            'version': 'Apple Swift version 5.7.0 '
                       '(swiftlang-5.7.0.123.8 clang-1400.0.29.50)\n'
                       'Target: x86_64-apple-darwin22.3.0\n',
            'description': 'Xcode 14.0 (contains Swift 5.7.0)',
            'branch': 'release/5.7'
        },
        '5.9': {
            'version': 'Apple Swift version 5.9 '
                       '(swiftlang-5.9.0.128.108 clang-1500.0.40.1)\n'
                       'Target: x86_64-apple-macosx14.0\n',
            'description': 'Xcode 15.0 (contains Swift 5.9.0)',
            'branch': 'release/5.9'
        },
        '5.10': {
            'version': 'Apple Swift version 5.10 '
                       '(swiftlang-5.10.0.13 clang-1500.3.9.4)\n'
                       'Target: x86_64-apple-macosx14.0\n',
            'description': 'Xcode 15.4 (contains Swift 5.10.0)',
            'branch': 'release/5.10'
        },
        '6.0': {
            'version': 'Apple Swift version 6.0 '
                       '(swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n'
                       'Target: x86_64-apple-macosx15.0\n',
            'description': 'Xcode 16.0 (contains Swift 6.0.0)',
            'branch': 'release/6.0'
        },
        '6.0.2': {
            'version': 'Apple Swift version 6.0.2 '
                       '(swiftlang-6.0.2.1.2 clang-1600.0.26.4)\n'
                       'Target: x86_64-apple-macosx15.0\n',
            'description': 'Xcode 16.1 (contains Swift 6.0.2)',
            'branch': 'release/6.0'
        },
        '6.0.3': {
            'version': 'Apple Swift version 6.0.3 '
                       '(swiftlang-6.0.3.1.10 clang-1600.0.30.1)\n'
                       'Target: x86_64-apple-macosx15.0\n',
            'description': 'Xcode 16.2 (contains Swift 6.0.3)',
            'branch': 'release/6.0'
        },
        '6.1': {
            'version': 'Apple Swift version 6.1-dev ' 'Apple Swift version 6.1-dev (LLVM 10f6ce806c05501, Swift 430dcd3bf98b9e1)'
                       '(LLVM 10f6ce806c05501, Swift 430dcd3bf98b9e1)\n'
                       'Target: x86_64-apple-macosx15.0\n',
            'description': 'https://www.swift.org/install/macos/',
            'branch': 'release/6.1'
        }
    },
    'Linux': {
        '4.0': {
            'version': 'Swift version 4.0 '
                       '(swift-4.0-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-4.0-RELEASE toolchain',
            'branch': 'release/4.0'
        },
        '4.0.3': {
            'version': 'Swift version 4.0.3 '
                       '(swift-4.0.3-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-4.0.3-RELEASE toolchain',
            'branch': 'release/4.0'
        },
        '4.1': {
            'version': 'Swift version 4.1 '
                       '(swift-4.1-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-4.1-RELEASE toolchain',
            'branch': 'release/4.1'
        },
        '4.2': {
            'version': 'Swift version 4.2 '
                       '(swift-4.2-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-4.2-RELEASE toolchain',
            'branch': 'release/4.2'
        },
        '4.2.1': {
            'version': 'Swift version 4.2.1 '
                       '(swift-4.2.1-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-4.2.1-RELEASE toolchain',
            'branch': 'release/4.2'
        },
        '5.0': {
            'version': 'Swift version 5.0 '
                       '(swift-5.0-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.0-RELEASE toolchain',
            'branch': 'release/5.0'
        },
        '5.1': {
            'version': 'Swift version 5.1 '
                       '(swift-5.1-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.1-RELEASE toolchain',
            'branch': 'release/5.1'
        },
        '5.2': {
            'version': 'Swift version 5.2 '
                       '(swift-5.2-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.2-RELEASE toolchain',
            'branch': 'release/5.2'
        },
        '5.3': {
            'version': 'Swift version 5.3 '
                       '(swift-5.3-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.3-RELEASE toolchain',
            'branch': 'release/5.3'
        },
        '5.7': {
            'version': 'Swift version 5.7 '
                       '(swift-5.7-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.7-RELEASE toolchain',
            'branch': 'release/5.7'
        },
        '5.9': {
            'version': 'Swift version 5.9 '
                       '(swift-5.9-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.9-RELEASE toolchain',
            'branch': 'release/5.9'
        },
        '5.10': {
            'version': 'Swift version 5.10 '
                       '(swift-5.10-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-5.10-RELEASE toolchain',
            'branch': 'release/5.10'
        },
        '6.0': {
            'version': 'Swift version 6.0 '
                       '(swift-6.0-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-6.0-RELEASE toolchain',
            'branch': 'release/6.0'
        },
        '6.0.2': {
            'version': 'Swift version 6.0.2 '
                       '(swift-6.0.2-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-6.0.2-RELEASE toolchain',
            'branch': 'release/6.0'
        },
        '6.0.3': {
            'version': 'Swift version 6.0.3 '
                       '(swift-6.0.3-RELEASE)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'swift-6.0.3-RELEASE toolchain',
            'branch': 'release/6.0'
        },
        '6.1': {
            'version': 'Swift version 6.1-dev '
                       'Swift version 6.1-dev (LLVM 36d7ebc48349af6, Swift c710b6d3de6a71b)\n'
                       'Target: x86_64-unknown-linux-gnu\n',
            'description': 'https://www.swift.org/install/linux/',
            'branch': 'release/6.1'
        }
    }
}


def parse_args():
    parser = argparse.ArgumentParser(
        description='Check a project for inclusion in the Swift source compatibility test suite'
    )
    parser.add_argument('project',
                        help='the project to test, specified by the "path" index field')
    parser.add_argument('--earliest-compatible-swift-version',
                        metavar='VERSION',
                        help='the Swift version mode to check, including decimal point (e.g. 3.0)',
                        required=True)
    parser.add_argument('--swiftc',
                        metavar='PATH',
                        help='swiftc executable')
    return parser.parse_args()


def validate(project_path, compatibility_version):
    common.debug_print("--- Validating %s Swift version %s compatibility ---" % (project_path, compatibility_version))

    with open(project_list) as projects:
        index = json.loads(projects.read())

    project = next((p for p in index if p['path'] == project_path), None)
    if not project:
        common.debug_print("error: Unable to find %s in project index ---" % project_path)
        exit(1)
    try:
        compatibility_dict = {version['version']: version for version in project['compatibility']}
        compatibility_dict[compatibility_version]
    except (IndexError, KeyError, TypeError) as e:
        common.debug_print("error: Unable to find %s Swift version %s compatibility in project index ---" % (project_path, compatibility_version))
        common.debug_print("note: Please add a version entry for %s to the `compatibility` field for %s in the project index or check against a version that has already been added ---" % (compatibility_version, project_path))
        raise
    common.debug_print("--- Project configured to be compatible with Swift %s ---" % compatibility_version)

    common.debug_print("--- Checking %s platform compatibility with %s ---" % (project_path, platform.system()))
    if not platform.system() in project['platforms']:
        common.debug_print("error: %s is not configured to be compatible with %s ---" % (project_path, platform.system()))
        common.debug_print("-- Add %s to the platforms list for %s ---" % (platform.system(), project_path))
        exit(1)
    common.debug_print("--- Platform compatibility check succeeded ---")


def is_correct_swift_version(swiftc, compatibility_version):
    common.debug_print("--- Checking installed Swift version ---")
    swift_version = common.check_execute_output([swiftc, '--version'])
    try:
        expected_swift_version = supported_configs[platform.system()][compatibility_version]['version']
    except KeyError:
        common.debug_print("error: Project configured for unsupported platform or Swift version")
        raise
    if swift_version.split("\n")[0] != expected_swift_version.split("\n")[0]:
        common.debug_print("--- Version check failed ---")
        common.debug_print("Expected version:\n" + expected_swift_version)
        common.debug_print("Current version:\n" + swift_version)
        common.debug_print("warning: Unexpected swiftc version. "\
            "Expected swiftc for Swift {compat_vers} can be found in {description}.".format(
            description=supported_configs[platform.system()][compatibility_version]['description'],
            compat_vers=compatibility_version)
        )
        return False
    common.debug_print("--- Version check succeeded ---")
    return True


def check(project, swift_branch, swiftc, compatibility_version):
    if not swiftc:
        if platform.system() == 'Darwin':
            common.debug_print("--- Locating swiftc executable ---")
            swiftc = common.check_execute_output(['xcrun', '-f', 'swiftc']).strip()
        else:
            common.debug_print('error: please specify --swiftc for non-Darwin platforms.')
            return 1
    swiftc_path = os.path.abspath(swiftc)
    if not is_correct_swift_version(swiftc_path, compatibility_version):
        common.debug_print("warning: Continuing to build with unexpected swiftc version.\n")
    runner_command = [
        runner_path,
        '--swift-branch', swift_branch,
        '--swiftc', swiftc_path,
        '--projects', project_list,
        '--include-repos', 'path == "%s"' % project,
        '--include-versions', 'version == "%s"' % compatibility_version,
        '--include-actions', 'action.startswith("Build")',
    ]
    common.debug_print("--- Executing build actions ---")
    try:
        common.check_execute(runner_command, timeout=3600)
    except common.ExecuteCommandFailure:
        common.debug_print("--- Encountered failures. Check .log files in current directory for details ---")
        return 1
    common.debug_print("--- %s checked successfully against Swift %s ---" % (project, compatibility_version))
    return 0


def main():
    os.chdir(os.path.dirname(__file__))
    args = parse_args()
    common.debug_print('** CHECK **')
    validate(args.project, args.earliest_compatible_swift_version)
    config = supported_configs[platform.system()][args.earliest_compatible_swift_version]
    common.set_swift_branch(config['branch'])
    return check(args.project, config['branch'], args.swiftc, args.earliest_compatible_swift_version)

if __name__ == '__main__':
    sys.exit(main())

